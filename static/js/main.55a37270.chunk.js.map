{"version":3,"sources":["Main/MainChilds/Canvas.js","Main/Main.js","Settings/Settings.js","App.js","index.js"],"names":["Canvas","props","table","this","numberOfLines","pathsArray","i","push","key","d","Math","cos","PI","sin","stroke","strokeWidth","id","viewBox","Component","Main","Settings","className","href","onClick","handleRenderClick","App","state","increaseSpeed","bind","increaseTable","setTimeout","setState","inputIDs","document","getElementById","value","newState","parseFloat","console","log","ReactDOM","render"],"mappings":"iTAyCeA,G,wBAtCX,WAAYC,GAAQ,qEACVA,I,sEAYN,IAPA,IAAIC,EAAQC,KAAKF,MAAMC,MACnBE,EAAgBD,KAAKF,MAAMG,cAK3BC,EAAa,GACRC,EAAI,EAAGA,EAAIF,EAAeE,IAC/BD,EAAWE,KACP,0BACIC,IAAKF,EACLG,EAAC,qCACM,IAAMC,KAAKC,IAAI,EAAED,KAAKE,GAAGR,EAAcE,GAD7C,YACmD,IAAMI,KAAKG,IAAI,EAAEH,KAAKE,GAAGR,EAAcE,GAD1F,uCAEM,IAAMI,KAAKC,IAAI,EAAED,KAAKE,GAAGR,EAAcE,EAAEJ,GAF/C,YAEyD,IAAMQ,KAAKG,IAAI,EAAEH,KAAKE,GAAGR,EAAcE,EAAEJ,GAFlG,0BAIDY,OAAO,QACPC,YAAY,WAOxB,OACI,yBAAKC,GAAG,SAASC,QAAQ,WAEpBZ,O,GAjCIa,cCsBNC,E,YAjBX,WAAYlB,GAAQ,qEACVA,I,sEAIN,OACI,yBAAKe,GAAG,QACJ,gCACI,4CACA,gGAEJ,kBAAC,EAAD,CAAQd,MAAOC,KAAKF,MAAMC,MAAOE,cAAeD,KAAKF,MAAMG,qB,GAZxDc,aCgCJE,G,kBAjCX,WAAYnB,GAAQ,qEACVA,I,sEAGA,IAAD,OACL,OACI,yBAAKe,GAAG,YACJ,gCACI,wCACA,6EAEJ,yBAAKK,UAAU,mBACX,yBAAKA,UAAU,iBACX,yBAAKL,GAAG,wBAAwBK,UAAU,mBACtC,wCACA,2BAAOL,GAAG,iBAEd,yBAAKA,GAAG,gCAAgCK,UAAU,mBAC9C,iDACA,2BAAOL,GAAG,yBAEd,yBAAKA,GAAG,gCAAgCK,UAAU,mBAC9C,gDACA,2BAAOL,GAAG,yBAEd,uBAAGM,KAAK,SAAQ,4BAAQD,UAAU,gBAAgBE,QAAS,kBAAM,EAAKtB,MAAMuB,sBAA5D,kB,GA1BjBN,c,6jBCgDRO,E,YA5Cb,WAAYxB,GAAQ,IAAD,8BACjB,4CAAMA,KACDyB,MAAQ,CACXxB,MAAO,EACPE,cAAe,IACfuB,cAAe,KAGjB,EAAKH,kBAAoB,EAAKA,kBAAkBI,KAAvB,gBACzB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBATJ,E,2EAYLD,GAAgB,IAAD,OAC3BG,YAAW,WACP,EAAKC,SAAS,CAAC7B,MAAO,EAAKwB,MAAMxB,MAAQyB,IACzC,EAAKE,cAAc,EAAKH,MAAMC,iBAC/B,M,0CAIHxB,KAAK0B,cAAc1B,KAAKuB,MAAMC,iB,0CAGX,IAAD,OACZK,EAAW,CAAC,cAAe,QAAS,sBAAuB,gBAAiB,sBAAuB,iBACzG,IAAK,IAAMxB,KAAOwB,EAChB,GAAIC,SAASC,eAAe1B,GAAK2B,MAAO,CACtC,IAAMC,EAAW,GACjBA,EAASJ,EAASxB,IAAQ6B,WAAWJ,SAASC,eAAe1B,GAAK2B,MAAO,IACzEhC,KAAK4B,SAAL,KAAkBK,IAAW,kBAAME,QAAQC,IAAI,EAAKb,a,+BAMxD,OACE,yBAAKV,GAAG,OACN,kBAAC,EAASb,KAAKuB,OACf,kBAAC,EAAD,CAAUF,kBAAmBrB,KAAKqB,yB,GAvCxBN,aCHlBsB,IAASC,OAAO,kBAAC,EAAD,MAASR,SAASC,eAAe,W","file":"static/js/main.55a37270.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Canvas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    \r\n    render() {\r\n\r\n        let table = this.props.table\r\n        let numberOfLines = this.props.numberOfLines\r\n\r\n        // generer un array avec toutes les coordonnées des points, et puis récupérer simplement les coordonnées dans l'array au lieu de faire à chaque fois sin et cos\r\n        // mais pas dans ce render car il se ferait recalculer à chaque actualisation de table, plutot à calculer dans le state\r\n\r\n        let pathsArray = []\r\n        for (let i = 0; i < numberOfLines; i++) {\r\n            pathsArray.push(\r\n                <path \r\n                    key={i}\r\n                    d={`\r\n                        M${1.5 + Math.cos(2*Math.PI/numberOfLines*i)} ${1.5 + Math.sin(2*Math.PI/numberOfLines*i)} \r\n                        L${1.5 + Math.cos(2*Math.PI/numberOfLines*i*table)} ${1.5 + Math.sin(2*Math.PI/numberOfLines*i*table)}\r\n                    `} \r\n                    stroke=\"black\" \r\n                    strokeWidth=\"0.002\" \r\n                />\r\n            )\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <svg id='Canvas' viewBox=\"0 0 3 3\">\r\n                {/* <circle cx=\"1.5\" cy=\"1.5\" r=\"1\" stroke=\"black\" stroke-width=\"0.005\" fill=\"white\" /> */}\r\n                {pathsArray}\r\n            </svg>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Canvas","import React, { Component } from 'react'\r\n\r\nimport './Main.css'\r\n\r\nimport Canvas from './MainChilds/Canvas'\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"Main\">\r\n                <header>\r\n                    <h1>Times Tables</h1>\r\n                    <p>Kharoh Family Science dynamic Times Tables diagram visualization</p>\r\n                </header>\r\n                <Canvas table={this.props.table} numberOfLines={this.props.numberOfLines} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React, { Component } from 'react'\r\n\r\nimport './Settings.css'\r\n\r\nclass Settings extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"Settings\">\r\n                <header>\r\n                    <h2>Settings</h2>\r\n                    <p>Here you can change some settings as you want</p>\r\n                </header>\r\n                <div className=\"settings-pannel\">\r\n                    <div className=\"middle-column\">\r\n                        <div id=\"table-input-container\" className=\"input-container\">\r\n                            <label>Table</label>\r\n                            <input id=\"table-input\"></input>\r\n                        </div>\r\n                        <div id=\"numberoflines-input-container\" className=\"input-container\">\r\n                            <label>Number of Line</label>\r\n                            <input id=\"numberoflines-input\"></input>\r\n                        </div>\r\n                        <div id=\"increasespeed-input-container\" className=\"input-container\">\r\n                            <label>Increasespeed</label>\r\n                            <input id=\"increasespeed-input\"></input>\r\n                        </div>\r\n                        <a href=\"#Main\"><button className=\"render-button\" onClick={() => this.props.handleRenderClick()}>render</button></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings","import React, { Component } from 'react'\n\nimport './App.css'\n\nimport Main from './Main/Main'\nimport Settings from './Settings/Settings'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      table: 0,\n      numberOfLines: 256,\n      increaseSpeed: 0.01,\n    }\n\n    this.handleRenderClick = this.handleRenderClick.bind(this)\n    this.increaseTable = this.increaseTable.bind(this)\n  }\n\n  increaseTable(increaseSpeed) {\n    setTimeout(() => {\n        this.setState({table: this.state.table + increaseSpeed})\n        this.increaseTable(this.state.increaseSpeed)\n    }, 10)\n  }\n\n  componentDidMount() {\n    this.increaseTable(this.state.increaseSpeed)\n  }\n\n  handleRenderClick() {\n    const inputIDs = {\"table-input\": \"table\", \"numberoflines-input\": \"numberOfLines\", \"increasespeed-input\": \"increaseSpeed\"}\n    for (const key in inputIDs) {\n      if (document.getElementById(key).value) {\n        const newState = {}\n        newState[inputIDs[key]] = parseFloat(document.getElementById(key).value, 10)\n        this.setState({...newState}, () => console.log(this.state))\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"App\">\n        <Main {...this.state} />\n        <Settings handleRenderClick={this.handleRenderClick} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}